cmake_minimum_required(VERSION 3.28)
project(Third_Party)

include(ExternalProject)

# Set your desired installation paths
set(EXTERNAL_INSTALL_LOCATION ${CMAKE_BINARY_DIR}/external)

# Boost configuration
ExternalProject_Add(
    boost
    GIT_REPOSITORY https://github.com/boostorg/boost.git
    GIT_TAG boost-1.79.0
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${EXTERNAL_INSTALL_LOCATION}/boost
)

# Protobuf configuration
ExternalProject_Add(
    protobuf
    GIT_REPOSITORY https://github.com/protocolbuffers/protobuf.git
    GIT_TAG v25.2
    BINARY_DIR ${EXTERNAL_INSTALL_LOCATION}/protobuf
    CMAKE_CACHE_ARGS
      -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
      -Dprotobuf_BUILD_TESTS:BOOL=OFF
      -Dprotobuf_BUILD_EXAMPLES:BOOL=OFF
      -Dprotobuf_WITH_ZLIB:BOOL=OFF
      -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
    SOURCE_SUBDIR cmake
    BUILD_ALWAYS 1
    STEP_TARGETS build
    INSTALL_COMMAND ${CMAKE_COMMAND} --build . --target install --config ${CMAKE_BUILD_TYPE} -- VERBOSE=1
)

# Declare dependencies on Boost and Protobuf
#add_dependencies(MyProject boost protobuf)

# Include directories for Boost and Protobuf
include_directories(${EXTERNAL_INSTALL_LOCATION}/boost/include)
include_directories(${EXTERNAL_INSTALL_LOCATION}/protobuf/include)

# Link directories for Boost and Protobuf
link_directories(${EXTERNAL_INSTALL_LOCATION}/boost/lib)
link_directories(${EXTERNAL_INSTALL_LOCATION}/protobuf/lib)


